pico-8 cartridge // http://www.pico-8.com
version 43
__lua__
-- snake game -- 

-- snake grows as it eats

-- 1 point per food
  
-- body copy the last position 
--	of the head

-- when head touches body then
-- game over or wall
 
 
function _init()
	snake_init() -- snake initiation
	map_init()
	food_init()
end

function _update()
	snake_update(snake_head)
end

function _draw()
	cls()

	map_draw(base_map)
	food_draw(food)
	snake_draw(snake_head) -- draw snake
end
-->8
-- snake --

function snake_init()
	
	snake_head = {
	
			x = 0,
			y =	0,
			sp = 18,
			velocity_x = 0,
			velocity_y = 0,
			speed = 1	
	}
	
	snake_body={}
	
end

function snake_update(snake_head)
		
		snake_head.x += snake_head.velocity_x
		snake_head.y += snake_head.velocity_y
		
		change_directions(snake_head) -- snake changes direction
end

function snake_draw(snake_head)
		
		local sp = snake_head.sp
		local x = snake_head.x 
		local y = snake_head.y
		
		spr(sp,x,y,1,1)		
end


function change_directions(snake_head)
	
	if btnp(⬆️) then
		snake_head.velocity_y -= 1
		snake_head.velocity_x =0
	end
	
	if btnp(⬇️) then
		snake_head.velocity_y += 1
		snake_head.velocity_x =0
	end
	
	if btnp(➡️) then
		snake_head.velocity_y = 0
		snake_head.velocity_x +=1
	end
	
	if btnp(⬅️) then
		snake_head.velocity_y = 0
		snake_head.velocity_x -=1
	end
	
	
end


-->8
-- map --

function map_init()

	base_map = {
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32},
	{32,32,32,32,32,32,32,32,32,32,32,32,32}

	}
	
end

function map_update()

end

function map_draw(base_map)
	
	-- from row 1 to last
	for x = 1 , #base_map do
	
		-- in each column to last
		for y = 1, #base_map[x] do
			local tile = base_map[x][y]
			
			
  	spr(tile, x * 8, y * 8,1,1) -- assuming each tile is 8x8 pixels

		end -- for
		
	end -- for
	
end
-->8
function food_init()
	
	food = {
		sp = 0,
		x 	=	flr(rnd(120)),
		y 	= flr(rnd(120))
	}

end

function create_food(food)
	
	--food.x = flr(rnd(120))
--	food.y = flr(rnd(120))

end

function food_draw(food)
	
	spr(food.sp,food.x,food.y,1,1)
	
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00888780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000033bbbb333353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
009a9a9a3333b3333543330800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9a9a9a9abb3333333333338000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9a9a9a9a3b333bb33333338000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
009a9a9a33333bb33543330800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000003bbb33333353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e222222e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e222222e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e222222e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e222222e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e222222e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e222222e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
