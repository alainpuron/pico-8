pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
		map_setup()
  player_init()
  bullet_init()
  asteroid_init()
  alien_init()
 	alien_bullet()


end

function _update()

	player_update() 
	bullet_update()
	asteroid_update()
	asteroid_hit()
	on_explotion(asteroids,2)
	on_explotion(alien,6)
	
	animation(alien,s, 8)
	
	alien_update()
	
end

function _draw()
 cls()
 show_points(plr)
	draw_health(plr)
	player_draw(plr)
	bullet_draw(b,bullets)
	asteroid_draw()
	alien_draw()
	bullet_draw(asb,ab)

end

-->8
-- player --
function player_init()

	plr={
	angle=0,
	x=64,
	y=64,
	vx=0,
	vy=0,
	r = 6,
	health = 3,
	points = 0
	}
		
end


function player_update()
	move(plr)
end

function player_draw(plr)
-- angle of rotation (should be updated each frame)
-- assume angle is already defined

-- calculate triangle points
x1 = plr.x + cos(plr.angle) * plr.r
y1 = plr.y + sin(plr.angle) * plr.r

x2 = plr.x + cos(plr.angle + 0.66) * plr.r
y2 = plr.y + sin(plr.angle + 0.66) * plr.r

x3 = plr.x + cos(plr.angle + 1.32) * plr.r
y3 = plr.y + sin(plr.angle + 1.32) * plr.r


-- draw triangle
line(x1, y1, x2, y2, 13) -- right
line(x2, y2, x3, y3, 6) -- bottom
line(x3, y3, x1, y1, 13) -- left
--print(plr.angle)
--print(plr.health)

end


function move(plr)

  -- moves toward the direction
  if btn(⬆️) then
  	plr.vx += cos(plr.angle) * 2
  	plr.vy += sin(plr.angle) * 2
  end
  

  -- rotation
  if btn(⬅️) then
  plr.angle -= 0.05
  end
  
  if btn(➡️) then
  	plr.angle += 0.05
  end
  
-- apply friction every frame
		plr.vx *= 0.90
		plr.vy *= 0.90
  
-- ship position  
  plr.x += plr.vx 
  plr.y += plr.vy   

		-- when out of screen
  plr.x = (plr.x+128)%128
  plr.y = (plr.y+128)%128

  
end

-- removes amount of hearts
function lose_health(plr)
			plr.health-=1
end

-- draws the health in screen
function draw_health(plr)

	for i=1,plr.health do
		spr(0,(0+i) * 8,0,1,1)
	end
	
end



-->8
-- bullet --

function bullet_init()
	
	-- table for bullets
	bullets={}
end

-- what bullets do
function bullet_update()

	shoot(plr)
	obj_behavior(bullets,b)
	outbound(b,bullets)
	
end

function obj_behavior(list,item)
	
	for item in all(list) do
	
		item.x += item.spdx -- x speed
		item.y += item.spdy
	
	end
	
end


function bullet_draw(item,list)

	-- draw each bullet created 
	for item in all(list) do
	
	-- spr, x,y
		spr(1,item.x,item.y)
	
	end	
	
end

function shoot(plr)

	-- add to the table bullets
	-- the following 
	if btnp(🅾️) then
	
	add(bullets, {
	
	-- bullet starting point
	x= x1 -3 ,  
	y= y1 -7 , 
	dmg = 3,
	-- bullet goes the way ship is
	-- pointing at 
	spdx = plr.vx + cos(plr.angle)*3,
	spdy = plr.vy + sin(plr.angle)*3
	
	})

	end
	
end


-->8
-- asteroid creation --
function asteroid_init()

	-- asteroids table
	asteroids={}
	creation_time=0

end

function asteroid_update()

asteroid_creation()
asteroid_movement()
end

function asteroid_creation()

	creation_time+=1
	
	-- every second create
	local sp = flr(rnd({64,96,102}))
	
	if creation_time >= 30 then
	
	add(asteroids, {
	x=rnd(68) ,  
	y=-68 , 
	speed = 0.7,
	sprite = sp,
	exploded = false,
	animation_timer = 0,
	first_sprite = sp,
	points = 50
	
	})
	
	-- reset the creating time
		creation_time=0
		

end

end

function asteroid_movement()

	for a in all(asteroids) do	
			a.y += a.speed			
		outbound(a,asteroids)	
	end	
	
end



function asteroid_draw()
	
		for a in all(asteroids) do
	
			spr(a.sprite,a.x,a.y,2,2)
	
		end	

end
-->8
-- asteroids interactions --

function map_setup()
	
	-- tile type
	aste=0
	small_aste=1 
	
end

-- if an item is out of certain
-- range then destoy it 
function outbound(item,list)
	
	for item in all(list) do
			
		if item.x > 150 or item.y > 150 or item.x < -150 or item.y < -150
			then
				destroy(list,item)
		end
		
		
	end
	
end

-- animates 
function on_explotion(list,timer)

	-- for every item start timer
	for item in all(list) do
	
		item.animation_timer +=1
				
		if item.exploded then 		 
		 item.sprite+=2
	 end
	 
		if item.exploded and item.animation_timer >= timer
			then
  	destroy(list, item)
		end

	end
	
end

-- deletes from table
function destroy(list,item)
		del(list,item)
end

-- did two objects collided?
function collided(list,obj,range)
	
	for item in all(list) do
		
		-- if two objects are close
		-- enough then return true
		if(abs(item.x - obj.x) < range and abs(item.y - obj.y) < range)
			then
			
				return true, item
			
		end
		
	end
	
end

-- creates multiple of an object
function create_more(amount,list,item,sprite_value)
	
	for i=1,amount do
		add(list,{
		x	= abs(item.x+rnd(20)),
		y	=	abs(item.y+rnd(20)),
		speed = item.speed,
		sprite = sprite_value,
		first_sprite = sprite_value,
		exploded = false,
		animation_timer = 0,
		points = 10
		})
	end
	
end


-- what happen when bullet hits
function on_bullet_hit(item)

item.exploded = true 
item.animation_timer = 0
item.sprite = item.first_sprite
end

-- on asteroid collition
function asteroid_hit()

	 local hit_plr,a = collided(asteroids,plr,10)
	
		-- ast hits player
		if hit_plr then
			destroy(asteroids,a)
			lose_health(plr)
		end
		
		
			-- alien ship hits player
		local hit_alien,s = collided(alien,plr,10)
		
		if hit_alien then
				destroy(alien,s)
				lose_health(plr)
		end
		
		-- alien bullet hits player
			 local hit_alien_bullet,asb = collided(ab,plr,5)
		
		if hit_alien_bullet then
		
				lose_health(plr)
				destroy(ab,asb)

		end
		-- bullet hit ast	
		for b in all(bullets) do
	
    local hit, a = collided(asteroids, b, 10)
   	local bullet_hit_alien, s = collided(alien, b, 10)
   	
   	-- bullet hits alien
   	if bullet_hit_alien then
   		
   		on_bullet_hit(s)
   		add_points(plr,s)
   		destroy(bullets, b)
   	end
   	
   	
    if hit then
    
    		add_points(plr,a)
      on_bullet_hit(a)
      destroy(bullets, b)
	
      if(a.sprite == 102) then
							create_more(4,asteroids,a,106)
						end
						
      break 
      
    end
    
  end
		
end



-->8
-- alien ship -- 

function alien_init()
	alien={}
	alien_creation_timer =0
end

function alien_count()
	
end

function alien_update()

			alien_creation(plr)
			alien_movement(alien)
			obj_behavior(ab,asb)
			
			if time() % 1.5 < 0.05 then
				ab_shoot(s)
			end
			
			outbound(s,alien)
			outbound(asb,ab)
end

-- creates the alien ship
function alien_creation(plr)

	alien_creation_timer+=1
	if rnd(100) < 1 and plr.points > 500 and #alien <= 3 and alien_creation_timer >= 60 then 
				
			local alienx = 120
			local alieny = rnd({100,60})
			
			add(alien,{	
			x=alienx,
			y=alieny,
			sprite = 8,
			first_sprite = 8,
			animation_timer = 0,
			speed = 1,
			dir = flr(rnd(2)),
			exploded = false,
			points = 100

	})
	
	alien_creation_timer = 0
	end
	
end

function alien_movement(alien)

  for s in all(alien) do
  	
  	if s.dir == 2 then
  				s.x+=s.speed
				else
					s.x-=s.speed 		  	
  	end
  		
  end
  
end


-- draws all alien ships
function alien_draw()

	for s in all(alien) do
		spr(s.sprite,s.x,s.y,2,2)
	end
	
end


-- animates an object
function animation(list,item,timer)

-- for every item start timer
	for item in all(list) do
	
		item.animation_timer +=1
		
		if item.animation_timer % 2 == 0 then		
			item.sprite+=2
		end
		
		
		if item.animation_timer >= timer
			then
			item.sprite = item.first_sprite
			item.animation_timer = 0
		end
		
	
	end -- for 

end

-- alien ship shooting --

function alien_bullet()
 -- alien bullet
	ab = {}
	ab_creation_time = 0
end

function ab_shoot(s)



	for s in all(alien) do

	local dx = plr.x - s.x
	local dy = plr.y - s.y
	local dist = sqrt(dx*dx + dy*dy)

	add(ab, {
	x= s.x-3 ,  
	y= s.y-7 , 
	dmg = 3, 
	sprite = 1,
	
	-- shoots toward the player
	spdx = dx / dist * 1,
	spdy = dy / dist * 1
	
	})



end
end


-->8
-- points --

function add_points(plr,item)
	plr.points+=item.points
end

function show_points(plr)
  print("score: "..plr.points, 40, 5, 10)
end


__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
18811881000000000000000000000000000000000000000000000000000000000000001111000000000000111100000000000011110000000000001111000000
1888888100000000000000000000000000000000000000000000000000000000000001777c100000000001c77c100000000001cc77100000000001ccc7100000
188888810000000000000000000000000000000000000000000000000000000000011777ccc1100000011c777cc1100000011ccc77c1100000011cccc7711000
188888810000000000000000000000000000000000000000000000000000000001117777cccc11100111cc777ccc11100111cccc777c11100111ccccc7771110
018888100007600000000000000000000000000000000000000000000000000012221cccccc1222112221cccccc1a22112221cc77771a22112221ccccc712221
00188100000660000000000000000000000000000000000000000000000000001d22a111111a22d11d222111111222d11d222111111722d11d222111111222d1
000000000600000000000000060000000000000000000000000000000000000001dd22722722dd1001dd2a227227dd1001dd222a2272dd1001dd22222222dd10
00606660586000000060666058600000000000000000000000000000000000000011dddddddd11000011dddddddd11000011dddddddd11000011dddddddd1100
000668818a880000000668818a880000000000000000000000000000000000000000111111110000000011111111000000001111111100000000111111110000
00089aa8999a800000089aa8999a8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
008a9997cc981000008a9997cc981000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01197888cccc111001197888cccc1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
12228aaa8cc1222112228aaa8cc12221000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1d28a99a811a22d11d28a99a811a22d1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01d682982722dd1001d682982722dd10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666ddddddd110000666ddddddd1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001111111100000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00600000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111000000000000011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001a991000000000011a9910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000aa99410000000001aa99410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000001a9944100000000001994410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000199544100100000001111100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000199544411410000019951000141000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000001a999444551000001a991001551000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000001aa995499a1000001aa100019a1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001999999a100000001100000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001a99aa1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000011110000000000001111000000000000000000000000000011110000000000001111000000000000000000000000000000000000000000000000000000
000017777610000000001777761000000000000000000000000011fff4100000000011fff4100000000000000000000000000000000000000000000000000000
0001777766100000000177776610000000000000000000000001fff4441000000001fff444100000000000000000000000000000000000000000000000000000
001777766610000000001776661000000000000000000000001ff44444110000001ff44444100000000000000000000000000000000000000000000000000000
001777666651000000000116665100000000000000000000001f4444444100000001111111000000000000111000000000000000000000000000000000000000
01777666655100000010001665510000000000000000000001444444444111000000000000000000000001445100000000000000000000000000000000000000
01666666551000000161001655100000000000000000000001444455444441110111110111000000000014445410000000000000000000000000000000000000
01666665551000000161000155100000000000000000000001454454444444410145410144100000000014444410000000000000000000000000000000000000
01666655551000000166100015100000000000000000000001444444444454410144410144100000000014554410000000000000000000000000000000000000
01666655550000000166610001000000000000000000000001444444454455410144100111101110000001444100000000000000000000000000000000000000
00166555510000000016651100000000000000000000000000144444455455410011000000015541000000111000000000000000000000000000000000000000
00166555100000000016655510000000000000000000000000144455444444410000111110014441000000000000000000000000000000000000000000000000
00016651000000000001665100000000000000000000000000014454444444110001445441014411000000000000000000000000000000000000000000000000
00001610000000000000161000000000000000000000000000001444444411100000144444101110000000000000000000000000000000000000000000000000
00000100000000000000010000000000000000000000000000000011111110000000011111000000000000000000000000000000000000000000000000000000
