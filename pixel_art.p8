pico-8 cartridge // http://www.pico-8.com
version 43
__lua__
function _init()
	
	mouse_init()
	inventory_init()
	drag_init()
	
end

function _update()

	mouse_update(mouse)
	
end

function _draw()

		cls()
	 map()
	 
	 inventory_draw(mouse)
	 mouse_draw(mouse,inv)
	  print(holding_left)
	  	  print(holding_right)

end
-->8
-- mouse --

function mouse_init()

	mouse = {
			x=0,-- default value
			y=0,-- default value
			button = 0, -- default value
			sp = 51, -- sprite
			del_sp = 53 
		}
		
		-- allows mouse usage
		poke(0x5f2d,1)
		holding_right = false
		
end

function mouse_update(mouse)
	
	-- sets the mouse conf
	mouse.y=stat(33) 
	mouse.x=stat(32)
	mouse.button = stat(34) -- left click

	-- functions --
	on_click(mouse,inv,selected)
	
end

-- on mouse click
function on_click(mouse,inv,selected)
	
	-- value for left and right click
	 left_click = 1
		right_click = 2
		holding_left = false
		local mouse_default = 51
		
	-- left click
	if mouse.button == left_click  then
	
		holding_left = true
		holding_right = false
		
		-- only let place when mouse is not over inv selection
		if not mouse_over_inv then
			-- places item  in position
			drag_update(mouse, inv,selection)
		end
		
		if mouse_over_inv then
			-- changes the mouse sp to default
			mouse.sp = mouse_default
			holding_right = false
		end
		
	
		
	end -- if(1)
	
	-- right click
	if mouse.button == right_click  then
			
				holding_right = true
			--	holding_left = false
				
				-- delete from map	
				drag_del(to_be_placed,mouse)
				
				-- turn the mouse into a del sprite
				mouse.sp = mouse.del_sp
				
	end -- if(2)
	
end -- function

function mouse_draw(mouse)

		spr(mouse.sp,mouse.x,mouse.y)
		-- draws the items 
	 drag_draw(to_be_placed,selection) 
	
		-- not show when in del mode
		if not holding_right then
			-- draws the sp on the mouse 
			draw_sp_mouse(inv,mouse)
		end		


end
-->8
-- item inventory --
function inventory_init()
	
	inv = {
	
	{sprite = 3,x=0,y=0,h=2,w=2},--house
	{sprite = 5,x=0,y=0,h=2,w=2},--tree
	{sprite = 7,x=0,y=0,h=2,w=2},--tree
	{sprite = 35,x=0,y=0,h=1,w=1},--road

	}
	
end



function inventory_draw(mouse)
				
				
    local inv_x = 0 -- start from
				local inv_y = 125 -- y location
				
				-- inventory 
				-- x1, y1, x2, y2, color
				rectfill(inv_x, inv_y, inv_x + 130, inv_y - 15, 15)
				
				-- checks if mouse is inside the inv selection
				if mouse.x > inv_x and mouse.x < inv_x + 130 and mouse.y < inv_y and mouse.y > inv_y - 15
					
					then
						mouse_over_inv = true
						else
						mouse_over_inv = false

				end
				
					local selected_x = nil
					--mouse_over_inv = false
				
				-- from 1 to inv count
				for i = 1, #inv do
						
		    item_x = inv_x - 14 + 14 * i
		    
		    -- draws in the inv selection
		    spr(inv[i].sprite, item_x, inv_y - 13, inv[i].h, inv[i].w)
						 

		    -- check if mouse is near this item
		    if abs(mouse.x - item_x) <= 8 and abs(mouse.y - (inv_y - 13)) <= 8 then
		       
		        selected_x = item_x

		        if holding_left then
											selection = i
										end
										
		    end -- if
    
				end -- for

			-- draw selection rect if mouse is near any item
			if selected_x then
		    rect(selected_x, inv_y, selected_x + 14, inv_y - 14, 7)
			end -- if
			
end

-- can see the selected item 
function draw_sp_mouse(inv,mouse)
	
	if selection then
		spr(inv[selection].sprite,mouse.x,mouse.y,inv[selection].h,inv[selection].w)
	end
	
end


-->8
-- select and drag --
function drag_init()
			
		to_be_placed={}
			
end

	
-- adds the selected sprite 
function drag_update(mouse, inv,selection)
    
    if selection then
	    add(to_be_placed, {
	    
	    	 	sprite = inv[selection].sprite,
	    			x = mouse.x,
	    			y = mouse.y,
	    			h = inv[selection].h,
	    			w = inv[selection].w
	     
	  		})
  		end
      
end

	
-- draw the sprites 
function drag_draw(to_be_placed,selection,mouse)
			
				i = selection 
							
    for i in all(to_be_placed) do
        spr(i.sprite, i.x, i.y, i.h, i.w)
    end
    
end

-- delete
function drag_del(to_be_placed, mouse)

				--local i = to_be_placed[selection]
				for i in all(to_be_placed) do
				
						if abs(mouse.x-i.x)<=8 and abs(mouse.y-i.y)<=8 then
						   del(to_be_placed, i)
		
						end
						
				end

    
end




__gfx__
00000000777771111117777700000000000000000000000150000000000000015000000000000000000000000000000000000000000000000000000000000000
00000000777116666661177700077777777777000000001331000000000000199100000000000000000000000000000000000000000000000000000000000000
000000007716677777766177000766666666670000000133bb10000000000199aa10000000000000000000000000000000000000000000000000000000000000
00000000716777777777761700076ddddd77d7000000013bbb1000000000019aaa10000000000000000000000000000000000000000000000000000000000000
00000000716777777777761700076ddddd55d70000001333bbb1000000001999aaa1000000000000000000000000000000000000000000000000000000000000
00000000717667777776671700076dddddddd7000000133bbbb500000000199aaaa5000000000000000000000000000000000000000000000000000000000000
000000007177766666677717000777777777770000053333bbbb100000059999aaaa100000000000000000000000000000000000000000000000000000000000
0000000071677777777776170006666666666600000533bbbbbb1000000599aaaaaa100000000000000000000000000000000000000000000000000000000000
e7e788e7715667777776651700066666666666000001333bbbbb50000001999aaaaa500000000000000000000000000000000000000000000000000000000000
7e78ee8e7155566666655517000666666666660000001333bb11000000001999aa11000000000000000000000000000000000000000000000000000000000000
e78e88e8715555666655551700066166164466000000144411000000000014441100000000000000000000000000000000000000000000000000000000000000
788e88e8715555666655551700066666664466000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8e88ee877515556666555157000ddfddffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8e88887e77511566665115770000dddddddfff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e8ee87e7777551111115577700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7e887e7e777775555557777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b37677777666666666655555566666666665555556000000000000000000000000000000000000000000000000000000000000000000000000
313b3b3b3b31313b7777677755555555655555565555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b37777777755555555655555565555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b7777777755555555655555565555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b36777777755555555655555565555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b7777777655555555655555565555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b37777777755555555655555565555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b7677777766666666655555566555555665555556000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b3f511f5f500000000333333330001111000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b1577175500000000333333330016666100000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b3575f751100070000333333330161111000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3bf5f5f51100707000333333331614100000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b315575f1f00070000333333331611410000000000000000000000000000000000000000000000000000000000000000000000000000000000
313b3b3b3b31313b1555f1f100000000333333331610141000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b35115511f00000000333333330100014100000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3bff1111ff00000000333333330000001000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434343434343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
