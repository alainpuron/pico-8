pico-8 cartridge // http://www.pico-8.com
version 43
__lua__
function _init()
	
	mouse_init()

end

function _update()
	mouse_update(mouse)
	inventory_init()
end

function _draw()
	cls()
	 
	 inventory_draw()
	 mouse_draw(mouse,inv)
	--spr(hsp,hx,hy,2,2)
	--spr(tsp,tx,ty,2,2)

	--holding = false
	--click_down = false
	
	--if mouse_btn == 1 then
	--click_down = true
	
	--	if abs(mpx-hx)<=8 and abs(mpy-hy)<=8 and not holding then
		
	--		holding = true
	--		hx = mpx - 4
	--		hy = mpy - 4
			
	--	end
		
	--	if abs(mpx-tx)<=8 and abs(mpy-ty)<=8 and not holding then
		
	--		holding= true
	--		tx = mpx - 4
	--		ty = mpy - 4
			
	--	end
		
-- end
 
end
-->8
-- mouse --

function mouse_init()

	mouse = {
			x=0,-- default value
			y=0,-- default value
			button = 0, -- default value
			sp = 51 -- sprite 
		}
		
		-- allows mouse usage
		poke(0x5f2d,1)

end

function mouse_update(mouse)
	
	-- sets the mouse conf
	mouse.y=stat(33) 
	mouse.x=stat(32)
	mouse.button = stat(34) -- left click
	
end

function on_click(mouse)
	
	-- value for left and right click
	local left_click = 1
	local	right_click = 2

	if mouse.button == left_click then
		print('left button clicked',7)
	end
	
	
	if mouse.button == right_click then
		print('right button clicked',7)
	end
	
end

function mouse_draw(mouse)
	spr(mouse.sp,mouse.x,mouse.y)
	on_click(mouse)
	
	
--		if abs(mouse.x-inv[i].item_x)<=8 and abs(mouse.y-inv[i].inv_y)<=8 then
	--	print('❎❎')
		
	--		holding = true
	--		hx = mpx - 4
	--		hy = mpy - 4
			
	--	end

end
-->8
-- item inventory --
function inventory_init()
	
	inv = {
	
	{sprite = 3,x=0,y=0},--house
	{sprite = 5,x=0,y=0},--tree

	}
end

function inventory_draw()

    local inv_x =  0 -- begin from left
    local inv_y =  125 -- inv at bottom
    rectfill(inv_x, inv_y, inv_x + 130, inv_y - 15, 15)

    for i=1,#inv do
    
        local item_x = inv_x - 10 + 12 * i
        spr(inv[i].sprite, item_x, inv_y - 13, 2, 2)
   					
    end
    print(inv[1].sprite)
    print(inv[1].item_x)


   -- rect(inv_x - 9 + selection * 9, inv_y, inv_x + selection * 9, inv_y + 9, 7)
end

-->8
-- select and drag --
function drag_init()
	
end
__gfx__
00000000777771111117777700000000000000000000000150000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777116666661177700077777777777000000001331000000000000000000000000000000000000000000000000000000000000000000000000000000
000000007716677777766177000766666666670000000133bb100000000000000000000000000000000000000000000000000000000000000000000000000000
00000000716777777777761700076ddddd77d7000000013bbb100000000000000000000000000000000000000000000000000000000000000000000000000000
00000000716777777777761700076ddddd55d70000001333bbb10000000000000000000000000000000000000000000000000000000000000000000000000000
00000000717667777776671700076dddddddd7000000133bbbb50000000000000000000000000000000000000000000000000000000000000000000000000000
000000007177766666677717000777777777770000053333bbbb1000000000000000000000000000000000000000000000000000000000000000000000000000
0000000071677777777776170006666666666600000533bbbbbb1000000000000000000000000000000000000000000000000000000000000000000000000000
e7e788e7715667777776651700066666666666000001333bbbbb5000000000000000000000000000000000000000000000000000000000000000000000000000
7e78ee8e7155566666655517000666666666660000001333bb110000000000000000000000000000000000000000000000000000000000000000000000000000
e78e88e87155556666555517000661661644660000001444ff000000000000000000000000000000000000000000000000000000000000000000000000000000
788e88e8715555666655551700066666664466000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8e88ee87751555666655515700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8e88887e775115666651157700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e8ee87e7777551111115577700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7e887e7e777775555557777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b37677777600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
313b3b3b3b31313b7777677700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b37777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b7777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b36777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b7777777600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b37777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b7677777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b3f511f5f500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3b1577175500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b3575f751100070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3bf5f5f51100707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b315575f1f00070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
313b3b3b3b31313b1555f1f100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3b3b3b3b35115511f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b3b3b3b3bff1111ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2001020102010201020102010201020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2011121112111211121112111211121100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2001022222201020102010322020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2011122222303110311020320304062000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2001022222323232323232321314162000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2011123031303130312020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
