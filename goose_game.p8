pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

-- initiation 
	function _init()
		game_state_init()
	
		if state == "play" then
			plr_init() -- player init values
			fish_placement() -- initial fish placement
		end

	end



-- constantly update
	function _update()
		game_update(plr) -- game state
		
		
			if state == "play" then
				plr_update() -- player 
				dcam() --camera
				fish_pickup() -- fish interaction
		 	spawn_new_fish() -- spawn new fish
			end

	end



-- draw functions
	function _draw()
		game_state_draw()
		
			if state == "play" then
					plr_draw()
					draw_fish()
			end
			
	end
-->8
-- player --
function plr_init()

	-- player table
 plr={
 x=63, -- x coor
 y=63, -- y coor
 sprite=0, -- player spr
 fx=false, -- flix x
 fy=false, -- flix y
	health = 100,
	speed = 1,
	speed_timer = 0

 }
 
end

function plr_update()

	move(plr)	
	health_update(plr,pickup_happened,state)
	onweath_draw(plr)
 speed_update(plr,pickup_happened)

end


-- draw the player sprite 
function plr_draw()
health_draw()
-- spr,x,y,w,h,fx,fy
spr(plr.sprite,plr.x,plr.y,2,2,plr.fx,plr.fy)

end
-->8
-- fish placement and pick --
 
fish_list={} -- stores the fish
fish_count=0 -- fish collected
fish_limit=5 -- limit
spawned_fish=0 -- count
total_score=0 -- score


-- fish creation --
function fish_generation()
	
	-- loop through a grid of 11x11
	-- tiles (from 0 to 10
	-- on both x and y)
	
	-- every block in the x axis
	for x=2,15 do
								
			-- every block in the y axis					
		for y=2,10 do
									
			if rnd(15)<.1 and x ~= plr.x and y ~- plr.y
				 then
				 
					-- add a fish to the list
				add(fish_list,{
											
					x = x * 8, -- convert grid to pixel
					y = y * 8,
					sp = rnd({7,8,9}), -- sprite index
					act = true
					})	
					spawned_fish+=1
					
									
			end -- if statement 
										
		end -- for y		
	end -- for x
	
-- function end	
end

-- place fish init
function fish_placement()

	while spawned_fish < fish_limit
	do
						fish_generation()	
	end
	
end

function fish_pickup()

	-- has a pick up happened
	pickup_happened = false

	-- for every fish in fish list
	for fish in all(fish_list) do
	
		-- if fish can still be picked
		if fish.act -- (true)
		then
		-- player is 8 or less pixels away
			if abs(plr.x - fish.x) <= 8 and abs(plr.y - fish.y) <= 8 then
				fish.act = false
				fish_count += 1 -- add to count
				total_score +=1
				-- a pick up happened
				pickup_happened = true
			end
		end
		
	end
	
	
	
	
end


function draw_fish()
	
	print(total_score,cx+10,cy+10,7)

	-- for all fish in fish list
	for fish in all(fish_list)
	 do
	 -- if it can be picked
				if fish.act then 
		-- draw fish
					spr(fish.sp,fish.x,fish.y)
				end
	
	end			
		
		
end

-- spawns new fish when 
-- all are collected
function spawn_new_fish()
		
		if fish_count == spawned_fish
			then
			spawned_fish=0
			fish_count=0
			fish_list = {} -- resets the list
			fish_placement()

		-- if statement 	
		end 
		
-- function
end
-->8
-- camera --
function dcam()

	cx=plr.x+8-63
	cy=plr.y+8-63
	camera(cx,cy)

end


-->8
-- movement animation --
function ymove_init() -- y 
--	y_sprite=32
	
	spr_timer = 0
	f_frame = 32 -- first frame
	l_frame = 38 -- last frame
	animation_speed = 10

end

-- animation movement 
function anmove_update()
	
	if btn(⬆️) then 
		
	
		if spr_timer < animation_speed then 
			spr_timer+=1
			else
				if plr.sprite < l_frame 
					then
						plr.sprite +=2
				else
					plr.sprite = f_frame
					end
			 spr_timer = 0
			end
			
		
	end -- if
	
end -- fuc
-->8
-- collitions -- 

function move(o) -- move an obj

	-- takes snapshot of player
	-- last position and 
	-- store it as a local variable
	
	local lx=o.x -- last x position
	local ly=o.y -- last y position

	-- player movement
 -- movement 
	if btn(➡️) then -- right move
		plr.x+=o.speed
		plr.sprite=0 -- spr number
		plr.fx=false -- x axis rot
		plr.fy=false
	end
	
	if btn(⬅️) then -- left move
		plr.x-=o.speed
		plr.sprite=0
		plr.fx=true
		plr.fy=false

	end
	
	
	if btn(⬆️) then -- down
		plr.y-=o.speed
		plr.sprite=32
		plr.fy=false -- y axis rot

	end
	
	if btn(⬇️) then -- up
		plr.y+=o.speed
		plr.sprite=32
		plr.fy=true

	end
	
	
	-- up and right 
	if btn(⬆️) and btn(➡️) then
		plr.sprite=41
		plr.fy=false
		plr.fx=false

	end
	
	-- up and left
	if btn(⬆️) and btn(⬅️) then
		plr.sprite=41
		plr.fy=false
		plr.fx=true
	end
	
	
	-- down and right
	if btn(⬇️) and btn(➡️) then
		plr.sprite=41
		plr.fy=true
		plr.fx=false

	end
	
	-- down and left
	if btn(⬇️) and btn(⬅️) then
		plr.sprite=41
		plr.fy=true
		plr.fx=true

	end

		-- if it collides, move back
 if collide(o) then
 
	-- if true then moves
	-- player to last valid position
 
 	o.x = lx -- last x value
 	o.y = ly -- last y value
 	
 end -- if collide end

end

function collide(o)
	
	-- grabs the edges 
	-- and stores them as variables
	local x1=o.x/8 -- top edge
	local y1=o.y/8
	local x2=(o.x+7)/8 -- bottom
	local y2=(o.y+7)/8

	-- check if any of the edges
	-- are touching a tile on the
	-- map with flag 0 (layer)
	local a=fget(mget(x1,y1),0)
	local b=fget(mget(x1,y2),0)
	local c=fget(mget(x2,y2),0)
	local d=fget(mget(x2,y1),0)



	if a or b or c or d then
	
	-- if return true 
	-- then player is colliding
	-- collide(o) gets call 
	-- and player return to
	-- last valid position
	
		return true
		
	else
	-- if player is not colliding
	-- then collide(0) is false
		 return false
		 
	end
	
end
-->8
-- health bar --


function health_update(plr,pickup_happened,state)

	-- player const loses health
	if plr.health > 0 then
		plr.health-=0.5
	end
	
	-- health bar size 
	earw = 8*plr.health/100
	
	
	-- if a pickup happened then
	-- player recovers health
	if plr.health < 100 then
	
		if pickup_happened
			then
			plr.health+=20
			
		end
		
	end
	
	if plr.health == 0 then
		state = "menu"
	end
	
	
end

-- health bar drawing 
function health_draw()
print("health: "..plr.health, 0, 0, 7)
print("state: "..state, 0, 8, 7)
	
	local offset_x = 0  -- shift left of player
 local offset_y = 20  -- shift above player

    local x1 = plr.x + offset_x
    local y1 = plr.y + offset_y
    local x2 = x1 + 10    -- width 0
    local y2 = y1 + 2    -- height 


    -- border of health bar
    rect(x1, y1, x2, y2, 6)

    -- fill portion (earw = current health width)
    rectfill(x1 + 1, y1 + 1, x1 + 2 + earw, y2 - 1, 3)
	
end
-->8
-- game state --

function game_state_init()
	state = "play"
end

function game_update(plr)

	if state == "play" then
	
		if btnp(❎) or plr.health == 0 then
			state = "menu"
		end
		
	elseif state == "menu" then
	
		if btnp(❎) then
			state = "play"
		end
		
		-- if game ended and player
		-- presses x then game
		-- restarts 
		
		if btnp(❎) and plr.health then
			state = "play"
			
			-- run game
			run()
		end
		
	end --if
	
end -- function


function game_state_draw()

	if state=="play" then
		cls()
		
		-- draw 20x15 tiles from (0,0) to (20,15)
		map(0, 0, 0, 0, 20, 15)
		
	elseif state=="menu" then
		cls(6)
		print("press any button to begin")

	end
end
-->8
-- weath interaction

function onweath_draw(plr)
	
	-- if over weath spr
	if mget(flr((plr.x+4)/8), flr(plr.y+4)/8) == 119
		then
		
		-- change spr --
		 mset(flr((plr.x+4)/8), flr((plr.y+4)/8), 120)
		 
	end
	
		
end
-->8
--  speed --

function speed_update(plr,pickup_happened)
	

	if pickup_happened
		then
			
		plr.speed = 1.5
		plr.speed_timer = 30
			
	end		
			
	  if plr.speed_timer > 0 then
     plr.speed_timer -= 1
      
	    if plr.speed_timer == 0 then
	      plr.speed = 1
	    end
	       
   end
			
				
		
	
	
end
__gfx__
00000000000000000000000000000000000000000000000000000000000660000002200000011000000000000033333333333333cccccccccccccccc00000000
00000000000000000000000000000000000000000000000000000000d0111600e0999a0080888900000000000333434333334334cccccc7ccc6666cc00000000
00000000000000000000000000000000000000000000000000000000d6111210e299919081888180000000000334433334433343ccccccccc667776c00000000
00000000000000000000000000000000000000000000000000000000dd611110ee29999088188880000000000333443433443434cc7ccc7c6777777600000000
00000000000033300000000000003330000000000000000000000000d6111110e299999081888880000000000344444444444444cccccccc6777776600000000
00000000000313100000000000031310000000000000000000000000d0166600e09aaa0080899900000000000334444444444444ccccccccc666666c00000000
00000000003333300000000000333330000000000000000000000000000660000002200000011000000000000334444444444444ccc7cccccccccccc00000000
006600066633a990006600066633a990000000000000000000000000000000000000000000000000000000000033444444444444cccccccccccccccc00000000
006676666633aa99006676666633aa990000000000000000000000000000000000000000000000000000000033344444cccccccccccccccccccccccc00000000
007766666566000000776666656600000000000000000000000000000000000000000000000000000000000033433444cccccccccc7cc7cccccccccc00000000
000665665560000000066566556000000000000000000000000000000000000000000000000000000000000033444444ccccc777cc7cc7cccccccccc00000000
000665556660000000066555666000000000000000000000000000000000000000000000000000000000000034444444cc77cccccc7cc7cccccccccc00000000
000066666600000000006666660000000000000000000000000000000000000000000000000000000000000033444444cccccccccc7cc7cccccccccc00000000
000009990000000000009909900000000000000000000000000000000000000000000000000000000000000033334444cccc777cccc7c7cccccccccc00000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033444444c777ccccccc7c7cccccccccc00000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034444444cccccccccccccccccccccccc00000000
00000000900000000000000090000000000000009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000009a900000000000009a900000000000009a900000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000aaa0000000000000aaa0000000000000aaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000131000000000000013100000000000001310000000000000000000000000000000000000000000aa00000000000000aa0000000000000000000000000
00000003330000000000000333000000000000033300000000000000000000000000000000000000000313900000000000031390000000000000000000000000
00000003630000000000000363000000000000036300000000000000000000000000000000000000003331000000000000333100000000000000000000000000
00000006660000000000000666000000000000066600000000000000000000000000000000000000666333000000000066633300000000000000000000000000
00000066666000000000006666600000000000666660000000000000000000000000000000000065666630000000006566663000000000000000000000000000
00000656665600000000065666560000000006566656000000000000000000000000000000000655666600000000065566660000000000000000000000000000
00000656665600000000065666560000000006566656000000000000000000000000000000006556665600000000655666560000000000000000000000000000
00000656665600000000065666560000000006566656000000000000000000000000000000006666656000000000666665600000000000000000000000000000
00000665656600000000066565660000000006656566000000000000000000000000000000006766556000000000676655600000000000000000000000000000
00000976667900000000097666700000000000766679000000000000000000000000000000006766566000000000676656600000000000000000000000000000
00000067776000000000096777600000000000677769000000000000000000000000000000000677799000000000067779000000000000000000000000000000
00000006660000000000000666000000000000066600000000000000000000000000000000000066600000000000006660000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc000000000000000000000000000000000000000000000000000000003bb33b3b3bb33b3b00000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000006666000000000000000000b33333b3b33333b300000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000066777600000000000000000354345353bb33b3b00000000000000000000000000000000
ccccc667ccc776ccc67666cc00000000000000000000000000000000677777760000000000000000445444443b33bb3300000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000677777660000000000000000444454454433b33b00000000000000000000000000000000
667cccccc67766ccc666777c000000000000000000000000000000000666666000000000000000004544444414b3333300000000000000000000000000000000
cccccccccccccccccccccccc000000000000000000000000000000000000000000000000000000004445454414443b3300000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000454444451114333b00000000000000000000000000000000
cccccccccccccccc00000000000000000000000000000000000000000000000000000000000000003bb33b3b3bb33b3b11163b3b000000000000000000000000
cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000b33333b3b33333b31665b3b3000000000000000000000000
ccccc611cc1116cc000000000000000000000000000000000000000000000000000000000000000035434535354345351644b535000000000000000000000000
cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000445444444454444416435b33000000000000000000000000
cccccccccccccccc00000000000000000000000000000000000000000000000000000000000000006444544644444444164453bb000000000000000000000000
cccc11ccccccc11c00000000000000000000000000000000000000000000000000000000000000001644446144446664164b3333000000000000000000000000
61cccccccc61cccc0000000000000000000000000000000000000000000000000000000000000000c166661c666611161643b3b5000000000000000000000000
cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000cc1111cc1111ccc111643b3b000000000000000000000000
cccccccccccccccccccccccccccccccccccccccc0000000000000000cccccccccccccccccccccccc00000000cccc11cc00000000000000000000000000000000
ccc777ccccc777ccccc7cccccccccccccccccccc0000000000000000cccc3eccccccccccc3b3333c00000000cc11651c00000000000000000000000000000000
cc7ccc7ccc7ccccccc7ccccccccccccccccccccc0000000000000000ccc3eaecccc333cc33b3333300000000c166656100000000000000000000000000000000
cc7ccc7ccc7ccccccccccccccccccccccccccccc0000000000000000cc323e3cc33b333b3b3333b3000000001666565100000000000000000000000000000000
cc7ccc7ccc7ccc7ccccccc7ccccccc7ccccccccc0000000000000000cc2a23ccc3b333333333c33b00000000c165561c00000000000000000000000000000000
ccc777ccccccc7ccccccc7ccccccc7cccccccccc0000000000000000ccc23cccc3333b33333c333300000000cc1111cc00000000000000000000000000000000
cccccccccccccccccccccccccccccccccccccccc0000000000000000ccccccccccc333ccc333c33c00000000cccccccc00000000000000000000000000000000
cccccccccccccccccccccccccccccccccccccccc0000000000000000cccccccccccccccccc33c3cc00000000cccccccc00000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000cccccccccccccccc00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000ca9ccccccccccccc00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000cc9cc9accccccccc00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000cc9c9ccca9cc99ac00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000cc99ccacc9999cca00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000acc9c9ccccc9cc9c00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000c9c9c9cca9c9c9cc00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000c9ccccccc9cccccc00000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b4b641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
676477646b6b7777676777646764776477646b5c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
64776464777764646b776477777764671e771e5c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e641e5c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e681e1e641e1e1e691e1e646b5c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e691e641e1e1e1e1e64691e1e1e1e7777675c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e64641e1e671e641e1e6b1e64675c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e77771e681e641e681e67671e641e1e77776b5c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e691e1e1e771e776b5c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e681e64641e1e1e691e1e1e1e671e1e1e1e1e5c641e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
