pico-8 cartridge // http://www.pico-8.com
version 43
__lua__


function _init()
	mouse_init() -- mouse
	consts_init() -- const menu 
	blueprint_init() -- blueprint 
end

function _update()
	mouse_update() -- mouse
	consts_update() -- const menu
	blueprint_update() -- blueprint

end

function _draw()
	cls()
	map()
	consts_draw() -- const menu
	blueprint_draw() -- blueprint
	mouse_draw(mouse) -- mouse
end
-->8
-- mouse --

function mouse_init()
	
	mouse = {
		x=0,
		y=0,
		sp=2,
		click=0
	}
	
end

function mouse_update()
	mouse_inputs(mouse) 		-- inputs
	mouse_movement(mouse) -- mouse movement
	mouse_state() 								-- state of the mouse
end

function mouse_inputs(mouse)
	
		-- mouse inputs
		mouse.x=stat(32) -- x
		mouse.y=stat(33) -- y
		mouse.click = stat(34) -- click
		
		
			-- clicks --
		left_click = 1
		right_click = 2
		
		poke(0x5f2d,1)
		
end

-- which click is being selected
function is_mouse_click_type(mouse,expected_click)
	
		if mouse.click == expected_click then
			return mouse.click == expected_click
		end
		
end

-- mouse state --
function mouse_state()
	
	
	-- is the mouse over toolbar
	is_over_toolbar = is_mouse_over(mouse,toolbar_base)
	
end

function mouse_draw(mouse)

	-- print tile 
	mouse_tile(mouse,toolbar_base)
	print(is_over_toolbar)	
		
	 -- sp,x,y,h,w --
	 -- if over toolbar or selection is none then free mouse
	 if is_over_toolbar or selection == nil then
	 		spr(mouse.sp,mouse.x,mouse.y,1,1)
		else
		-- grid mouse 
			spr(1,cursor_x,cursor_y,1,1)
	 end
		
end

function mouse_movement(mouse)
		
		-- tile coordinates
		tile_x = 	flr(mouse.x / 8)
  tile_y = 	flr(mouse.y / 8)
  
		-- converting tile coordinates to pixel coordinates
		cursor_x = tile_x * 8
  cursor_y = tile_y * 8

end

function mouse_tile(mouse,toolbar_base)

	print(mget(tile_x,tile_y))
	print(mouse.x .. "," .. mouse.y)
	print(tile_x .. "," .. tile_y)

end

function is_mouse_over(mouse,item)
		
		local starting_x = item.s_width
		local starting_y =	item.s_height
		local ending_x		 =	item.e_width
		local	ending_y 		=	item.e_height
		
		-- is over a border
		if mouse.x >= starting_x and mouse.x <= ending_x and mouse.y >= starting_y and mouse.y <= ending_y then
				return true
			else 
				return false
		end
		
		 
end


-->8
-- toolbar base and selection --
function consts_init()
	
	toolbar_base = {
		s_width  = 0, 		-- starting
		s_height = 110,	-- position
		e_width  = 130,		-- end
		e_height = 125	-- height
	}
	
	toolbar = {
	
	{sp = 16,s_width=0,s_height=0,e_width=0,e_height=0},
	{sp = 17,s_width=0,s_height=0,e_width=0,e_height=0}
	
	}
	
	-- selected toolbar,default nil
	selection = nil
	
end

function consts_update()

end

function consts_draw()
	toolbar_base_draw(toolbar_base) -- draw toolbar base
	toolbar_draw(toolbar,toolbar_base) -- draw the selection
	print(selection)
end

-- draw the base 
function toolbar_base_draw(toolbar_base)
		
		-- lenght starting point
		local menu_x = toolbar_base.s_width 
		-- height starting point
		local menu_y = toolbar_base.s_height
		
		local menu_x_end = toolbar_base.e_width
		
		local menu_y_end = toolbar_base.e_height
		
		-- starting x -- position y -- width -- height -- color
		rectfill(menu_x,menu_y,menu_x_end,menu_y_end,1)
	
end

-- draws the items inside the toolbar
function toolbar_draw(toolbar,toolbar_base)

			local tool_x 	= toolbar_base.s_width   -- x1 
			local tool_y 	= toolbar_base.s_height -- y2

	
	-- starting from 1 go though everything in list
	for i = 1, #toolbar do
	
			local item_x = tool_x + 14 * (i - 1)
   local item_y = tool_y + 4
 		
 		-- update the toolbar box
			toolbar[i].s_width 	= 	item_x 
			toolbar[i].e_height = 	item_y + 8
			toolbar[i].s_height = 	item_y
			toolbar[i].e_width 	= 	item_x + 8
		
		-- selected tool 
		local tool = toolbar[i]
	 over_tool = is_mouse_over(mouse,tool)
		
		-- draw all toolbars
		spr(toolbar[i].sp,item_x+3,item_y,1,1)
	
		-- if mouse is over a tool then show it with a rectangle 
		if over_tool then
		
		   rect(item_x+2, item_y - 1, item_x + 11, item_y + 8, 8) 

				
					if is_mouse_click_type(mouse,left_click) then
							selection = i	-- updates the selection
					end -- if 
					
					-- del selection
					if is_mouse_click_type(mouse,right_click)	then 
									selection = nil	-- updates the selection
					end
     
  end -- if
   
	end -- for 
	
	--	print(selection)
	-- print("starting x:" ..",".. toolbar[1].s_width)		
	--	print("starting y:" ..",".. toolbar[1].e_height)		
	--	print("ending x:" ..",".. toolbar[1].e_width)		
	--	print("ending y:" ..",".. toolbar[1].e_height)

end -- function



-->8
-- tile selection for building --

function blueprint_init()
	
	-- store the selected tiles
		to_be_built = {}
	
end

function blueprint_update()
	
	add_to(to_be_built)
end

function blueprint_draw()
	
	print(can_placed())
	
	for i in all(to_be_built) do
			spr(i.sp,i.x,i.y,1,1)
	end
	
end


function add_to(to_be_built)
	
	 
	if can_placed() then 
	
				add(to_be_built,	{
					x = cursor_x,
					y = cursor_y,
					sp = 32
				})
				
	end
	
end


-- can the selection be placed
function can_placed()

	if is_mouse_click_type(mouse,left_click)
	and not is_over_toolbar and selection ~= nil 
		then
			return true -- can be placed
			else return false
	end
	
	
end


-- is the tile already occupied 
function is_occuipied(blueprint_init)
	
	-- starting from the first go though the total 
	for i=1, #to_be_built do 
	
			if to_be_built[i].x == tile_x and to_be_built[i].y == tile_y then
			  
				return true -- list has it
			
			end 
	
	end
	
	return false
	
end

__gfx__
00000000088888807000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000800000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700800000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000800000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000800000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700800000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000800000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00333300000300b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300003000300b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
30000003030000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03033030300b00300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300003000b003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03333330000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b333333b33333b330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b333333b33b333b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b333333b3b33b3b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b333333b3b33b3b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b333333b333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b333333b333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc333333333333333333333333333333334444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc333333333333333333333333333333334444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc333333333333333333333333333333334444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc333333333333333333333333333b33333434433400000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc3333333334333333333333333b3b33333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc3433444334444443333333333b3b3b333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc444444444444444433333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc444444444444444433333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05776650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05766650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05766650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05776650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
5353535353535353535353535454535340404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5354535453535354545353535353535340404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353535353545353535354535354535440404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5354535353535353535353535353535340404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353535353545453535453535354535440404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5151515251525151525251525151525140404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505050505050505050505050505040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5555555555555555505555555555555540404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353535353535353505353535353535340404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404140414040414040404040404040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424240404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424240404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424240404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424240404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
